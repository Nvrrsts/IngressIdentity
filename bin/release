#!/bin/bash

set -e

log() {
    echo "$@" >&2
}

branch=''

if [ $# -ne 1 ]; then
    log "Usage: bin/release <version>"
    log "    version: major.minor.patch"

    exit 1;
fi

version="$1"

if ! (echo "$version" | grep -qE '\d+\.\d+\.\d+' ); then
    log "Invalid version: $version"
    log "Use major.minor.patch"

    exit 2;
fi

oldversion=$(grep -F '"version"' manifest.json | cut -d':' -f2 | cut -d'"' -f2)

abortOlder() {
    log "Version $version is older than current version $oldversion"

    exit 2;
}

if [ $(echo $version | cut -d'.' -f1) -lt $(echo $oldversion | cut -d'.' -f1 ) ]; then
    abortOlder
elif [ $(echo $version | cut -d'.' -f1) -eq $(echo $oldversion | cut -d'.' -f1 ) ]; then
    if [ $(echo $version | cut -d'.' -f2) -lt $(echo $oldversion | cut -d'.' -f2 ) ]; then
        abortOlder
    elif [ $(echo $version | cut -d'.' -f2) -eq $(echo $oldversion | cut -d'.' -f2 ) ]; then
        if [ $(echo $version | cut -d'.' -f3) -lt $(echo $oldversion | cut -d'.' -f3 ) ]; then
            abortOlder
        elif [ $(echo $version | cut -d'.' -f3) -eq $(echo $oldversion | cut -d'.' -f3 ) ]; then
            log "Version hasn't changed: $version"
            exit 2
        fi
    fi
fi

branch=$(git rev-parse --abbrev-ref HEAD)

case "$branch" in
    master)
        log "Cannot create new version from master branch"
        log "Don't develop on master!"
        exit 3
        ;;
    develop|dev-*)
        log "Cannot create new version from dev branch"
        log "Please create a version-... branch or use a bugfix branch"
        exit 3
        ;;
    *)
        ;;
esac

echo "Updating from version $oldversion to $newversion" >&2

if ! git diff --quiet; then
    log 'There are untracked changes. Please add and commit all changes before creating a new release'
    exit 3
fi

if ! git diff --quiet --cached; then
    echo 'There are uncommitted changes. Please commit these changes before creating a new release' >&2
    exit 3
fi

# update version
sed -i'' -e "s/\"version\"\:.*\$/\"version\": \"$version\",/" manifest.json*
git add manifest.json*

log "Creating release commit"
log git commit -m "[release] v$version"

log git checkout master
log git merge "$branch" || (
    log "Merging $branch to master failed, please merge manually";
    log "Then create a signed tag called v$version"
    exit 1
)
log git tag -s "v$version"

log git push
log git push --tags

log "Creating versions/v$version.zip"
log dist
